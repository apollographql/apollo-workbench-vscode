{
  "name": "apollo-workbench",
  "displayName": "Apollo Workbench",
  "description": "Tooling to help you develop and mock federated schemas using Apollo Federation",
  "icon": "media/workbench.png",
  "repository": {
    "url": "https://github.com/apollographql/apollo-workbench-vscode"
  },
  "license": "SEE LICENSE IN LICENSE",
  "version": "3.2.14",
  "publisher": "ApolloGraphQL",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/main.js",
  "scripts": {
    "docs:build": "jekyll build",
    "docs:start": "jekyll serve",
    "graphql-codegen": "graphql-codegen",
    "codegen": "apollo client:codegen --target=typescript  src/graphql/types --outputFlat",
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "vscode:package": "vsce package",
    "compile": "tsc -p ./",
    "lint": "eslint . --ext .ts,.tsx",
    "watch": "tsc -watch -p ./",
    "postinstall": "npm run compile",
    "test": "node ./out/__tests__/testsNoStatus.js",
    "test:ci": "node ./out/__tests__/githubCheckTests.js"
  },
  "devDependencies": {
    "@graphql-codegen/cli": "2.16.5",
    "@graphql-codegen/typed-document-node": "2.3.13",
    "@graphql-codegen/typescript": "2.8.8",
    "@graphql-codegen/typescript-operations": "2.5.13",
    "@types/glob": "7.2.0",
    "@types/graphql": "14.5.0",
    "@types/js-yaml": "4.0.5",
    "@types/lodash": "4.14.196",
    "@types/mocha": "10.0.1",
    "@types/node": "20.4.5",
    "@types/vscode": "1.80.0",
    "@typescript-eslint/eslint-plugin": "3.10.1",
    "@typescript-eslint/parser": "3.10.1",
    "@vscode/test-electron": "2.3.3",
    "@vscode/vsce": "2.19.0",
    "esbuild": "0.17.19",
    "eslint": "7.32.0",
    "mocha": "10.2.0",
    "prettier": "2.8.8",
    "typescript": "5.1.6"
  },
  "dependencies": {
    "@apollo/client": "^3.4.16",
    "@apollo/server": "^4.8.1",
    "@apollo/subgraph": "^2.4.3",
    "@faker-js/faker": "^8.2.0",
    "@graphql-tools/mock": "^8.7.14",
    "@graphql-typed-document-node/core": "^3.2.0",
    "archiver": "^5.2.0",
    "chokidar": "^3.4.3",
    "codemirror": "^5.63.3",
    "fix-path": "^4.0.0",
    "graphql": "^16.7.1",
    "graphql-tag": "^2.12.6",
    "graphql-tools": "^8.2.0",
    "js-yaml": "^4.1.0",
    "lodash": "^4.17.20",
    "node-fetch": "^2.6.4",
    "shell-path": "^3.0.0",
    "vscode-languageclient": "^7.0.0",
    "vscode-languageserver": "^7.0.0",
    "vscode-uri": "^3.0.6"
  },
  "prettier": {
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "all"
  },
  "contributes": {
    "configuration": {
      "title": "Apollo-Workbench",
      "properties": {
        "apollo-workbench.apolloApiUrl": {
          "type": [
            "string"
          ],
          "default": "https://api.apollographql.com/graphql",
          "description": "Specifies the url endpoint to be used for the Apollo GraphOS Platform API"
        },
        "apollo-workbench.apolloOrg": {
          "type": [
            "string"
          ],
          "default": "",
          "description": "This setting is meant to hardcode the org used"
        },
        "apollo-workbench.openSandboxOnStartMocks": {
          "type": "boolean",
          "default": true,
          "description": "Determines whether https://studio.apollographql.com/sandbox should be opened when mocks are started for a workbench design"
        },
        "apollo-workbench.routerVersion": {
          "type": [
            "string"
          ],
          "description": "Specifies the version of Apollo Router should be used with `rover dev`. Defautls to latest."
        },
        "apollo-workbench.routerPort": {
          "type": [
            "number"
          ],
          "default": 4000,
          "description": "Specifies the url endpoint to be used for the Apollo Studio Graph"
        },
        "apollo-workbench.routerConfigFile": {
          "type": [
            "string"
          ],
          "description": "File pointer to the router config to be used with rover dev"
        },
        "apollo-workbench.roverConfigProfile": {
          "type": [
            "string"
          ],
          "default": "",
          "description": "Specifies the rover config profile that should be used for GraphOS"
        },
        "apollo-workbench.startingServerPort": {
          "type": [
            "number"
          ],
          "default": 4001,
          "description": "Specifies the url endpoint to be used for the Apollo Studio Graph"
        },
        "apollo-workbench.enableSubgraphUrlWatcher": {
          "type": [
            "boolean"
          ],
          "default": true,
          "description": "Runs a watcher in the background to fetch updates from subgraph_url's defined in designs"
        },
        "apollo-workbench.subgraphWatcherPingInterval": {
          "type": [
            "number"
          ],
          "default": 1000,
          "description": "Determines the interval of pings `rover subgraph introspect` shoud be called by the watcher"
        },
        "apollo-workbench.daysOfOperationsToFetch": {
          "type": [
            "number"
          ],
          "default": 30,
          "description": "Specifies the number of days to select operations from Apollo Studio (to current day)"
        },
        "apollo-workbench.displayExampleGraphs": {
          "type": [
            "boolean"
          ],
          "default": true,
          "description": "Specifies whether to display the 'Example Graphs' section is shown in the 'Apollo Studio Graphs' TreeView"
        },
        "apollo-workbench.tlsRejectUnauthorized": {
          "type": [
            "boolean"
          ],
          "default": false,
          "description": "Specifies whether to set `NODE_TLS_REJECT_UNAUTHORIZED=0` or not. `NODE_TLS_REJECT_UNAUTHORIZED=0` is the default to avoid enterprise cert issues in development - Note this should never be done in production"
        },
        "apollo-workbench.local-designs.expandSubgraphsByDefault": {
          "type": "boolean",
          "default": true,
          "description": "Specifies whether the subgraphs in a design should be expanded by default in the visual tree"
        },
        "apollo-workbench.local-designs.expandOperationsByDefault": {
          "type": "boolean",
          "default": true,
          "description": "Specifies whether the operations in a design should be expanded by default in the visual tree"
        }
      }
    },
    "commands": [
      {
        "command": "local-supergraph-designs.sandbox",
        "title": "Open Apollo Sandbox",
        "icon": "$(notebook-execute)",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.refreshSandbox",
        "title": "Refresh Apollo Sandbox",
        "icon": "$(refresh)",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.refresh",
        "title": "Refresh Local Designs",
        "icon": "$(refresh)",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.editSubgraph",
        "title": "Edit Subgraph",
        "icon": "$(edit)",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.addSubgraph",
        "title": "Add New Subgraph to Design",
        "icon": "$(add)",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.newDesign",
        "title": "New Supergraph Design",
        "icon": "$(add)",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.viewSupergraphSchema",
        "title": "View Supergraph Schema",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.exportSupergraphSchema",
        "title": "Export Supergraph Schema",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.addOperation",
        "title": "Add Operation to Design",
        "icon": "$(add)",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.deleteOperation",
        "title": "Delete Operation from Design",
        "icon": "$(trash)",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.viewOperationDesign",
        "title": "View Operation UI Design",
        "icon": "$(go-to-file)",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.checkSubgraphSchema",
        "title": "GraphOS Schema Check",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.enableMocking",
        "title": "Enable Mocking",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.disableMocking",
        "title": "Disable Mocking",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.addCustomMocksToSubgraph",
        "title": "Open Custom Mocks",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.deleteSubgraph",
        "title": "Delete Subgraph",
        "icon": "$(trash)",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.startRoverDevSession",
        "title": "Start Supergraph Locally",
        "icon": "$(play)",
        "category": "GraphOS"
      },
      {
        "command": "local-supergraph-designs.stopRoverDevSession",
        "title": "Stop Supergraph Running Locally",
        "icon": "$(debug-stop)",
        "category": "GraphOS"
      },
      {
        "command": "extension.login",
        "title": "Login with User API Key",
        "category": "GraphOS",
        "icon": "$(log-in)"
      },
      {
        "command": "extension.logout",
        "title": "Logout",
        "category": "GraphOS",
        "icon": "$(log-out)"
      },
      {
        "command": "studio-graphs.openInGraphOS",
        "title": "Open Supergraph in GraphOS",
        "category": "GraphOS"
      },
      {
        "command": "studio-graphs.newDesignFromGraphOSSupergraph",
        "title": "New Design from Supergraph in GraphOS",
        "category": "GraphOS"
      },
      {
        "command": "studio-graphs.refreshSupergraphsFromGraphOS",
        "title": "Refresh Supergraphs from GraphOS",
        "icon": "$(refresh)",
        "category": "GraphOS"
      },
      {
        "command": "studio-graphs.switchOrg",
        "title": "Switch GraphOS Organization",
        "category": "GraphOS"
      },
      {
        "command": "studio-graphs.loadOperationsFromGraphOS",
        "title": "Load Operations from GraphOS",
        "category": "GraphOS"
      },
      {
        "command": "studio-operations.addToDesign",
        "title": "Add Operation to a Local Design",
        "icon": "$(add)",
        "category": "GraphOS"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "apollo-workbench",
          "title": "Apollo Workbench",
          "icon": "media/workbench.svg"
        }
      ]
    },
    "views": {
      "apollo-workbench": [
        {
          "id": "local-supergraph-designs",
          "name": "Local Supergraph Designs"
        },
        {
          "id": "studio-graphs",
          "name": "GraphOS Supergraphs"
        },
        {
          "id": "studio-operations",
          "name": "GraphOS Operations"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "local-supergraph-designs.refresh",
          "when": "view == local-supergraph-designs",
          "group": "navigation@2"
        },
        {
          "command": "local-supergraph-designs.newDesign",
          "when": "view == local-supergraph-designs",
          "group": "navigation@1"
        },
        {
          "command": "studio-graphs.refreshSupergraphsFromGraphOS",
          "when": "view == studio-graphs",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "local-supergraph-designs.startRoverDevSession",
          "when": "view == local-supergraph-designs && viewItem == subgraphSummaryTreeItem",
          "group": "inline@1"
        },
        {
          "command": "local-supergraph-designs.stopRoverDevSession",
          "when": "view == local-supergraph-designs && viewItem == subgraphSummaryTreeItem",
          "group": "inline@2"
        },
        {
          "command": "local-supergraph-designs.addSubgraph",
          "when": "view == local-supergraph-designs && viewItem == subgraphSummaryTreeItem",
          "group": "inline@3"
        },
        {
          "command": "local-supergraph-designs.addOperation",
          "when": "view == local-supergraph-designs && viewItem == operationSummaryTreeItem",
          "group": "inline"
        },
        {
          "command": "local-supergraph-designs.sandbox",
          "when": "view == local-supergraph-designs && viewItem == operationTreeItem",
          "group": "inline"
        },
        {
          "command": "local-supergraph-designs.viewOperationDesign",
          "when": "view == local-supergraph-designs && viewItem == operationTreeItem",
          "group": "inline"
        },
        {
          "command": "local-supergraph-designs.checkSubgraphSchema",
          "when": "view == local-supergraph-designs && viewItem == subgraphTreeItem",
          "group": "7@1"
        },
        {
          "command": "local-supergraph-designs.enableMocking",
          "when": "view == local-supergraph-designs && viewItem == subgraphTreeItem",
          "group": "8@1"
        },
        {
          "command": "local-supergraph-designs.disableMocking",
          "when": "view == local-supergraph-designs && viewItem == subgraphTreeItem",
          "group": "8@2"
        },
        {
          "command": "local-supergraph-designs.addCustomMocksToSubgraph",
          "when": "view == local-supergraph-designs && viewItem == subgraphTreeItem",
          "group": "8@3"
        },
        {
          "command": "local-supergraph-designs.deleteSubgraph",
          "when": "view == local-supergraph-designs && viewItem == subgraphTreeItem",
          "group": "9@1"
        },
        {
          "command": "local-supergraph-designs.deleteOperation",
          "when": "view == local-supergraph-designs && viewItem == operationTreeItem",
          "group": "9@1"
        },
        {
          "command": "local-supergraph-designs.viewSupergraphSchema",
          "when": "view == local-supergraph-designs && viewItem == supergraphTreeItem",
          "group": "1@1"
        },
        {
          "command": "local-supergraph-designs.exportSupergraphSchema",
          "when": "view == local-supergraph-designs && viewItem == supergraphTreeItem",
          "group": "1@2"
        },
        {
          "command": "studio-graphs.openInGraphOS",
          "when": "view == studio-graphs && viewItem == studioGraphTreeItem",
          "group": "1"
        },
        {
          "command": "studio-graphs.newDesignFromGraphOSSupergraph",
          "when": "view == studio-graphs && viewItem == studioGraphTreeItem",
          "group": "2"
        },
        {
          "command": "studio-graphs.newDesignFromGraphOSSupergraph",
          "when": "view == studio-graphs && viewItem == studioGraphVariantTreeItem"
        },
        {
          "command": "studio-operations.addToDesign",
          "when": "view == studio-operations && viewItem == studioOperationTreeItem",
          "group": "inline"
        },
        {
          "command": "studio-operations.addToDesign",
          "when": "view == studio-operations && viewItem == studioOperationTreeItem"
        }
      ]
    }
  }
}
