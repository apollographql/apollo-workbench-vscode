{
  "name": "apollo-workbench",
  "displayName": "Apollo Workbench",
  "description": "Tooling to help you develop and mock federated schemas using Apollo Federation",
  "icon": "media/workbench.png",
  "repository": {
    "url": "https://github.com/apollographql/apollo-workbench-vscode"
  },
  "license": "SEE LICENSE IN LICENSE",
  "version": "2.2.1",
  "publisher": "ApolloGraphQL",
  "engines": {
    "vscode": "^1.34.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onView:local-supergraph-designs"
  ],
  "main": "./out/extension.js",
  "scripts": {
    "codegen": "apollo client:codegen --target=typescript  src/graphql/types --outputFlat",
    "vscode:prepublish": "npm run compile",
    "vscode:package": "vsce package",
    "compile": "tsc -p ./",
    "lint": "eslint . --ext .ts,.tsx",
    "watch": "tsc -watch -p ./",
    "postinstall": "npm run compile",
    "test": "node ./out/__tests__/testsNoStatus.js",
    "test:ci": "node ./out/__tests__/githubCheckTests.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/graphql": "^14.5.0",
    "@types/lodash": "^4.14.165",
    "@types/mocha": "^8.2.0",
    "@types/node": "^14.14.14",
    "@types/vscode": "^1.34.0",
    "@typescript-eslint/eslint-plugin": "^3.0.2",
    "@typescript-eslint/parser": "^3.0.2",
    "eslint": "^7.1.0",
    "mocha": "^8.2.1",
    "prettier": "^2.2.1",
    "typescript": "^4.0.2",
    "vsce": "^1.83.0",
    "vscode-test": "^1.4.1"
  },
  "dependencies": {
    "@apollo/client": "^3.4.16",
    "@apollo/composition": "npm:@apollo/composition@2.0.0-alpha.2",
    "@apollo/federation-1": "npm:@apollo/federation@^0.33.8",
    "@apollo/federation-2": "npm:@apollo/subgraph@2.0.0-alpha.2",
    "@apollo/gateway-1": "npm:@apollo/gateway@^0.44.1",
    "@apollo/gateway-2": "npm:@apollo/gateway@2.0.0-alpha.2",
    "@apollo/query-graphs": "npm:@apollo/query-graphs@2.0.0-alpha.2",
    "@apollo/query-planner-1": "npm:@apollo/query-planner@^0.5.1",
    "@apollo/query-planner-2": "npm:@apollo/query-planner@2.0.0-alpha.2",
    "apollo-server": "^3.4.0",
    "archiver": "^5.2.0",
    "chokidar": "^3.4.3",
    "codemirror": "^5.63.3",
    "faker": "^5.4.0",
    "graphql": "^15.6.1",
    "graphql-tools": "^8.2.0",
    "lodash": "^4.17.20",
    "node-fetch": "^2.6.4",
    "vscode-languageclient": "^7.0.0",
    "vscode-languageserver": "^7.0.0"
  },
  "prettier": {
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "all"
  },
  "contributes": {
    "configuration": {
      "title": "Apollo-Workbench",
      "properties": {
        "apollo-workbench.apolloApiUrl": {
          "type": [
            "string"
          ],
          "default": "https://graphql.api.apollographql.com/api/graphql",
          "description": "Specifies the url endpoint to be used for the Apollo Studio Graph"
        },
        "apollo-workbench.apolloOrg": {
          "type": [
            "string"
          ],
          "default": "",
          "description": "This setting is meant to hardcode the org used"
        },
        "apollo-workbench.openSandboxOnStartMocks": {
          "type": "boolean",
          "default": true,
          "description": "Determines whether https://studio.apollographql.com/sandbox should be opened when mocks are started for a workbench design"
        },
        "apollo-workbench.gatewayPort": {
          "type": [
            "number"
          ],
          "default": 4000,
          "description": "Specifies the url endpoint to be used for the Apollo Studio Graph"
        },
        "apollo-workbench.startingServerPort": {
          "type": [
            "number"
          ],
          "default": 4001,
          "description": "Specifies the url endpoint to be used for the Apollo Studio Graph"
        },
        "apollo-workbench.gatewayReCompositionInterval": {
          "type": [
            "number"
          ],
          "default": 10000,
          "description": "Specifies the interval the Apollo Gateway will try re-composing it's schema in ms"
        },
        "apollo-workbench.daysOfOperationsToFetch": {
          "type": [
            "number"
          ],
          "default": 30,
          "description": "Specifies the number of days to select operations from Apollo Studio (to current day)"
        },
        "apollo-workbench.runOperationRegistry": {
          "type": [
            "boolean"
          ],
          "default": false,
          "description": "Specifies the url endpoint to be used for the Apollo Studio Graph"
        },
        "apollo-workbench.displayGettingStarted": {
          "type": [
            "boolean"
          ],
          "default": true,
          "description": "Specifies whether to display the 'Getting Started' section is shown in the 'Local Schema Files' TreeView"
        },
        "apollo-workbench.displayExampleGraphs": {
          "type": [
            "boolean"
          ],
          "default": true,
          "description": "Specifies whether to display the 'Example Graphs' section is shown in the 'Apollo Studio Graphs' TreeView"
        },
        "apollo-workbench.tlsRejectUnauthorized": {
          "type": [
            "boolean"
          ],
          "default": false,
          "description": "Specifies whether to set `NODE_TLS_REJECT_UNAUTHORIZED=0` or not. `NODE_TLS_REJECT_UNAUTHORIZED=0` is the default to avoid enterprise cert issues in development - Note this should never be done in production"
        },
        "apollo-workbench.headersToForwardFromGateway": {
          "type": "array",
          "default": [],
          "description": "Specifies what headers should be forwarded from the gateway to downstream mocked services"
        },
        "apollo-workbench.local-designs.expandSubgraphsByDefault": {
          "type": "boolean",
          "default": true,
          "description": "Specifies whether the subgraphs in a design should be expanded by default in the visual tree"
        },
        "apollo-workbench.local-designs.expandOperationsByDefault": {
          "type": "boolean",
          "default": true,
          "description": "Specifies whether the operations in a design should be expanded by default in the visual tree"
        }
      }
    },
    "commands": [
      {
        "command": "local-supergraph-designs.refresh",
        "title": "Refresh local subgraph designs",
        "icon": "$(refresh)"
      },
      {
        "command": "local-supergraph-designs.editSubgraph",
        "title": "Edit Subgraph",
        "icon": "$(edit)"
      },
      {
        "command": "local-supergraph-designs.addSubgraph",
        "title": "Add New Subgrraph to Design",
        "icon": "$(add)"
      },
      {
        "command": "local-supergraph-designs.newDesign",
        "title": "Create New Supergraph Design",
        "icon": "$(add)"
      },
      {
        "command": "local-supergraph-designs.viewSettings",
        "title": "View Settings for Service",
        "icon": "$(gear)"
      },
      {
        "command": "local-supergraph-designs.viewSupergraphSchema",
        "title": "View Supergraph Schema"
      },
      {
        "command": "local-supergraph-designs.viewSupergraphApiSchema",
        "title": "View API Schema for Supergraph"
      },
      {
        "command": "local-supergraph-designs.exportSupergraphSchema",
        "title": "Export Supergraph Schema"
      },
      {
        "command": "local-supergraph-designs.exportSupergraphApiSchema",
        "title": "Export API Schema for Supergraph"
      },
      {
        "command": "local-supergraph-designs.editOperation",
        "title": "Edit Operation"
      },
      {
        "command": "local-supergraph-designs.addOperation",
        "title": "Add Operation",
        "icon": "$(add)"
      },
      {
        "command": "local-supergraph-designs.viewQueryPlan",
        "title": "View Query Plan",
        "icon": "$(output)"
      },
      {
        "command": "local-supergraph-designs.deleteSubgraph",
        "title": "Delete Subgraph",
        "icon": "$(trash)"
      },
      {
        "command": "local-supergraph-designs.deleteOperation",
        "title": "Delete Operation",
        "icon": "$(trash)"
      },
      {
        "command": "local-supergraph-designs.startMocks",
        "title": "Start Supergraph Mocks",
        "icon": "$(play)",
        "category": "Apollo Workbench"
      },
      {
        "command": "local-supergraph-designs.stopMocks",
        "title": "Stop Supergraph Mocks",
        "icon": "$(debug-stop)",
        "category": "Apollo Workbench"
      },
      {
        "command": "local-supergraph-designs.updateSubgraphSchemaFromURL",
        "title": "Update Subgraph Schema from URL"
      },
      {
        "command": "local-supergraph-designs.viewSubgraphCustomMocks",
        "title": "View Subgraph Custom Mocks"
      },
      {
        "command": "local-supergraph-designs.exportSubgraphSchema",
        "title": "Export Subgraph Schema"
      },
      {
        "command": "local-supergraph-designs.exportSubgraphResolvers",
        "title": "Export Subgraph Entity Resolvers"
      },
      {
        "command": "local-supergraph-designs.createInStudio",
        "title": "Create new Apollo Studio Graph from design"
      },
      {
        "command": "local-supergraph-designs.exportDesignToProject",
        "title": "Export design into a local project"
      },
      {
        "command": "local-supergraph-designs.switchFederationComposition",
        "title": "Switch between Apollo Federation 1 and 2"
      },
      {
        "command": "extension.gettingStarted",
        "title": "Getting Started"
      },
      {
        "command": "extension.openFolder",
        "title": "Open Folder",
        "category": "Apollo Workbench"
      },
      {
        "command": "extension.enterStudioApiKey",
        "title": "Login to Apollo",
        "category": "Apollo Workbench",
        "icon": "$(log-in)"
      },
      {
        "command": "extension.deleteStudioApiKey",
        "title": "Logout of Apollo",
        "category": "Apollo Workbench",
        "icon": "$(log-out)"
      },
      {
        "command": "studio-graphs.createWorkbenchFromGraph",
        "title": "Create Workbench File from Graph"
      },
      {
        "command": "studio-graphs.createWorkbenchFromPreloaded",
        "title": "Create Workbench File from Example"
      },
      {
        "command": "studio-graphs.createWorkbenchFromSupergraphVariant",
        "title": "Create Workbench File from Graph"
      },
      {
        "command": "studio-graphs.refresh",
        "title": "Refresh Graphs",
        "icon": "$(refresh)"
      },
      {
        "command": "studio-graphs.switchOrg",
        "title": "Switch Apollo Studio Org",
        "category": "Apollo Workbench"
      },
      {
        "command": "studio-graphs.loadOperations",
        "title": "Load Graph Operations"
      },
      {
        "command": "studio-operations.addToWorkbench",
        "title": "Add Operation to Current Workbench",
        "icon": "$(add)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "apollo-workbench",
          "title": "Apollo Workbench",
          "icon": "media/workbench.svg"
        }
      ]
    },
    "views": {
      "apollo-workbench": [
        {
          "id": "local-supergraph-designs",
          "name": "Local Supergraph Designs"
        },
        {
          "id": "studio-graphs",
          "name": "Apollo Studio Graphs"
        },
        {
          "id": "studio-operations",
          "name": "Apollo Studio Graph Operations"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "local-supergraph-designs.refresh",
          "when": "view == local-supergraph-designs",
          "group": "navigation@2"
        },
        {
          "command": "local-supergraph-designs.newDesign",
          "when": "view == local-supergraph-designs",
          "group": "navigation@1"
        },
        {
          "command": "studio-graphs.refresh",
          "when": "view == studio-graphs",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "local-supergraph-designs.createInStudio",
          "when": "view == local-supergraph-designs && viewItem == supergraphTreeItem",
          "group": "1"
        },
        {
          "command": "local-supergraph-designs.exportDesignToProject",
          "when": "view == local-supergraph-designs && viewItem == supergraphTreeItem",
          "group": "2"
        },
        {
          "command": "local-supergraph-designs.viewSettings",
          "when": "view == local-supergraph-designs && viewItem == subgraphTreeItem",
          "group": "inline"
        },
        {
          "command": "local-supergraph-designs.startMocks",
          "when": "view == local-supergraph-designs && viewItem == subgraphSummaryTreeItem",
          "group": "inline@1"
        },
        {
          "command": "local-supergraph-designs.stopMocks",
          "when": "view == local-supergraph-designs && viewItem == subgraphSummaryTreeItem",
          "group": "inline@2"
        },
        {
          "command": "local-supergraph-designs.addSubgraph",
          "when": "view == local-supergraph-designs && viewItem == subgraphSummaryTreeItem",
          "group": "inline@3"
        },
        {
          "command": "local-supergraph-designs.addOperation",
          "when": "view == local-supergraph-designs && viewItem == operationSummaryTreeItem",
          "group": "inline"
        },
        {
          "command": "local-supergraph-designs.viewQueryPlan",
          "when": "view == local-supergraph-designs && viewItem == operationTreeItem",
          "group": "inline"
        },
        {
          "command": "local-supergraph-designs.updateSubgraphSchemaFromURL",
          "when": "view == local-supergraph-designs && viewItem == subgraphTreeItem",
          "group": "1@1"
        },
        {
          "command": "local-supergraph-designs.viewSubgraphCustomMocks",
          "when": "view == local-supergraph-designs && viewItem == subgraphTreeItem",
          "group": "1@2"
        },
        {
          "command": "local-supergraph-designs.exportSubgraphSchema",
          "when": "view == local-supergraph-designs && viewItem == subgraphTreeItem",
          "group": "2@1"
        },
        {
          "command": "local-supergraph-designs.exportSubgraphResolvers",
          "when": "view == local-supergraph-designs && viewItem == subgraphTreeItem",
          "group": "2@2"
        },
        {
          "command": "local-supergraph-designs.deleteSubgraph",
          "when": "view == local-supergraph-designs && viewItem == subgraphTreeItem",
          "group": "9@1"
        },
        {
          "command": "local-supergraph-designs.deleteOperation",
          "when": "view == local-supergraph-designs && viewItem == operationTreeItem",
          "group": "10@1"
        },
        {
          "command": "local-supergraph-designs.exportSupergraphSchema",
          "when": "view == local-supergraph-designs && viewItem == supergraphSchemaTreeItem",
          "group": "1"
        },
        {
          "command": "local-supergraph-designs.exportSupergraphApiSchema",
          "when": "view == local-supergraph-designs && viewItem == supergraphApiSchemaTreeItem",
          "group": "2"
        },
        {
          "command": "studio-graphs.createWorkbenchFromGraph",
          "when": "view == studio-graphs && viewItem == studioGraphTreeItem"
        },
        {
          "command": "studio-graphs.createWorkbenchFromPreloaded",
          "when": "view == studio-graphs && viewItem == preloadedWorkbenchFile"
        },
        {
          "command": "studio-graphs.createWorkbenchFromSupergraphVariant",
          "when": "view == studio-graphs && viewItem == studioGraphVariantTreeItem"
        },
        {
          "command": "studio-operations.addToWorkbench",
          "when": "view == studio-operations && viewItem == studioOperationTreeItem",
          "group": "inline"
        },
        {
          "command": "studio-operations.addToWorkbench",
          "when": "view == studio-operations && viewItem == studioOperationTreeItem"
        }
      ]
    }
  }
}
